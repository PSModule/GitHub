filter Enable-GitHubRepositoryPrivateVulnerabilityReporting {
    <#
        .SYNOPSIS
        Enable private vulnerability reporting for a repository

        .DESCRIPTION
        Enables private vulnerability reporting for a repository. The authenticated user must have admin access
        to the repository. For more information, see
        "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)."

        .EXAMPLE
        Enable-GitHubRepositoryPrivateVulnerabilityReporting -Owner 'PSModule' -Name 'GitHub'

        Enables private vulnerability reporting for the PSModule/GitHub repository.

        .NOTES
        [Enable private vulnerability reporting for a repository](https://docs.github.com/rest/repos/repos#enable-private-vulnerability-reporting-for-a-repository)

        .LINK
        https://psmodule.io/GitHub/Functions/Repositories/Repositories/Enable-GitHubRepositoryPrivateVulnerabilityReporting
    #>
    [CmdletBinding(SupportsShouldProcess)]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSAvoidLongLines', '', Justification = 'Long links')]
    param(
        # The account owner of the repository. The name is not case sensitive.
        [Parameter(Mandatory)]
        [string] $Owner,

        # The name of the repository without the .git extension. The name is not case sensitive.
        [Parameter(Mandatory)]
        [string] $Name,

        # The context to run the command in. Used to get the details for the API call.
        # Can be either a string or a GitHubContext object.
        [Parameter()]
        [object] $Context
    )

    begin {
        $stackPath = Get-PSCallStackPath
        Write-Debug "[$stackPath] - Start"
        $Context = Resolve-GitHubContext -Context $Context
        Assert-GitHubContext -Context $Context -AuthType IAT, PAT, UAT
    }

    process {
        $inputObject = @{
            Method      = 'PUT'
            APIEndpoint = "/repos/$Owner/$Name/private-vulnerability-reporting"
            Context     = $Context
        }

        if ($PSCmdlet.ShouldProcess("Private Vulnerability Reporting for [$Owner/$Name]", 'Enable')) {
            Invoke-GitHubAPI @inputObject | ForEach-Object {
                Write-Output $_.Response
            }
        }
    }

    end {
        Write-Debug "[$stackPath] - End"
    }
}

#SkipTest:FunctionTest:Will add a test for this function in a future PR
